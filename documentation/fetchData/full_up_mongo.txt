Le script `fullUpMongo.py` semble être conçu pour peupler une base de données MongoDB avec des données 
fictives pour un système de gestion de pharmacie.

### Importations des Modules
Le script importe des classes de modèles qui correspondent vraisemblablement aux collections dans la base de 
données MongoDB (`Adresse`, `Client`, `Drug`, `Prescription`, `Sell`). Il utilise également la bibliothèque 
`Faker` pour générer des données fictives, `dateutil` pour manipuler des dates, et les modules `random`, 
`datetime`, et `time` de Python pour les fonctionnalités aléatoires et de gestion du temps.

### Fonctions Utiles
- `format_time(seconds)`: Convertit un temps donné en secondes en une chaîne de caractères lisible 
indiquant les minutes et les secondes.
- `generate_door_number()`: Génère un numéro de porte aléatoire pour une adresse.

### Fonctions de Création de Données
- `create_clients(n_client)`: Génère un nombre spécifié de clients fictifs et les 
enregistre dans la base de données.
- `create_adresses()`: Attribue une ou plusieurs adresses fictives à chaque client existant dans 
la base de données.
- `create_drugs()`: Génère des données pour une liste de médicaments avec des informations telles que le 
stock, le prix d'achat, et le prix de vente.
- `create_prescriptions()`: Génère des ordonnances fictives pour les clients existants, y compris la date 
de délivrance, la date d'expiration, et d'autres détails pertinents.
- `create_sells()`: Génère des enregistrements de vente fictifs pour les clients, en utilisant les 
ordonnances actives des clients pour déterminer les détails de la vente.

Chaque fonction ci-dessus vérifie d'abord l'existence de données prérequises (comme les clients pour les adresses) 
et génère des données en conséquence. Les enregistrements générés sont ensuite enregistrés dans la base de données.

### Fonction Principale `create_all()`
Cette fonction appelle `create_adresses()`, `create_prescriptions()`, et `create_sells()` dans cet ordre et 
calcule le temps pris par chaque fonction ainsi que le temps total d'exécution. Elle fournit un retour dans 
la console sur le temps d'exécution pour chaque partie du processus de génération des données.

### Exécution du Script
À la fin du script, la fonction `create_all()` est appelée pour lancer le processus de génération et de peuplement 
des données. Les fonctions `create_drugs()` et `create_clients(4)` sont commentées, mais on peut supposer 
qu'elles étaient utilisées précédemment pour générer des médicaments et des clients.

### Utilisation Pratique
Ce script est utilisé pour remplir une base de données MongoDB avec des données fictives, 
qui peuvent ensuite être utilisées pour tester le comportement de l'application, comme les requêtes de base de 
données, la logique métier, ou les interfaces utilisateur sans avoir besoin de données réelles. 
Cela permet aux développeurs et aux testeurs de travailler avec un ensemble de données représentatif 
sans exposer de vraies données clients, ce qui est crucial pour la sécurité et la confidentialité.
les données serons éventuellement transferées dans une base de données relationnelle. 