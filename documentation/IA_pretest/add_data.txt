
Objectif
Le script `add_data.py` est conçu pour ajouter des données de transactions. Il permet aux 
utilisateurs d'ajouter individuellement ou en masse des transactions de vente de 
médicaments, en se connectant à une base de données MySQL pour récupérer les informations nécessaires.

Fonctionnalités Clés

 Connexion à la Base de Données
- Le script établit une connexion à une base de données MySQL nommée `pharmaai` pour accéder aux données 
existantes sur les médicaments (`drugs`), les clients (`clients`), les prescriptions (`prescriptions`), 
et les ventes (`sells`).
- Des fonctions spécifiques (`get_all_drugs`, `get_all_clients`, `get_all_prescriptions`, 
`get_all_sells`) récupèrent les informations pertinentes de chaque table pour les utiliser 
dans l'interface utilisateur.

 Ajout de Transactions
- L'utilisateur peut choisir entre deux options principales : ajouter une transaction unique ou 
ajouter plusieurs transactions à partir d'un fichier CSV.
- Pour une transaction unique, l'utilisateur peut rechercher un client par email, sélectionner un 
médicament dans une liste déroulante, et saisir des détails supplémentaires comme la date de vente, 
le nombre de prescriptions délivrées, etc.
- Les transactions multiples peuvent être ajoutées en téléchargeant un fichier CSV contenant 
les données de transactions, qui seront ensuite fusionnées avec les données existantes.

 Génération Dynamique de Données
- Le script calcule dynamiquement plusieurs attributs des transactions, tels que le jour de la semaine, 
si la date est un week-end ou un jour férié, et la saison basée sur la date de vente.
- Le profit pour chaque transaction est calculé comme la différence entre le prix de vente et le prix 
d'achat du médicament sélectionné.

 Interaction avec l'Utilisateur via Streamlit
- Streamlit est utilisé pour créer une interface utilisateur interactive où les utilisateurs peuvent facilement 
sélectionner les options, entrer des données, et soumettre des transactions.
- Des validations et des messages de feedback sont fournis pour guider l'utilisateur dans le processus 
d'ajout de données.

 Méthodes et Procédures

- `get_cursor()` : Établit la connexion à la base de données MySQL et retourne le curseur et la connexion.
- `get_all_drugs()`, `get_all_clients()`, `get_all_prescriptions()`, `get_all_sells()` : 
Récupèrent les informations existantes dans la base de données pour leur utilisation dans l'interface utilisateur.
- `add_data()` : Fonction principale qui implémente la logique d'ajout de transactions à l'aide d'interfaces 
utilisateur Streamlit.

 Utilisation et Exécution

- Le script est exécuté via Streamlit, offrant une interface web pour interagir avec 
les fonctionnalités d'ajout de données.
- Les utilisateurs peuvent choisir entre ajouter une transaction à la fois ou en masse via un fichier CSV.
- Après l'ajout de transactions, les modifications sont sauvegardées dans un 
fichier CSV existant, `outputSQL.csv`, qui sert de source de données persistante pour l'application.

